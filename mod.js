// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var r="function"==typeof Object.defineProperty?Object.defineProperty:null;var e,t=Object.defineProperty,n=Object.prototype,o=n.toString,a=n.__defineGetter__,i=n.__defineSetter__,u=n.__lookupGetter__,l=n.__lookupSetter__;e=function(){try{return r({},"x",{}),!0}catch(r){return!1}}()?t:function(r,e,t){var f,c,_,p;if("object"!=typeof r||null===r||"[object Array]"===o.call(r))throw new TypeError("invalid argument. First argument must be an object. Value: `"+r+"`.");if("object"!=typeof t||null===t||"[object Array]"===o.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((c="value"in t)&&(u.call(r,e)||l.call(r,e)?(f=r.__proto__,r.__proto__=n,delete r[e],r[e]=t.value,r.__proto__=f):r[e]=t.value),_="get"in t,p="set"in t,c&&(_||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return _&&a&&a.call(r,e,t.get),p&&i&&i.call(r,e,t.set),r};var f=e;function c(r){return r!=r}var _=Number.NEGATIVE_INFINITY;function p(r){return 0===r&&1/r===_}function b(r,e,t,n,o){var a,i,u,l,f;if(r<=0)return n;if(u=o<0?(1-r)*o:0,a=e[i=t<0?(1-r)*t:0],n[u]=a,u+=o,f=1,!1===c(a))for(;f<r;f++){if(c(l=e[i+=t])){a=l;break}(l<a||l===a&&p(l))&&(a=l),n[u]=a,u+=o}if(c(a))for(;f<r;f++)n[u]=a,u+=o;return n}function y(r,e,t,n,o,a,i){var u,l,f,_,b;if(r<=0)return o;if(f=i,u=e[l=n],o[f]=u,f+=a,b=1,!1===c(u))for(;b<r;b++){if(c(_=e[l+=t])){u=_;break}(_<u||_===u&&p(_))&&(u=_),o[f]=u,f+=a}if(c(u))for(;b<r;b++)o[f]=u,f+=a;return o}f(b,"ndarray",{configurable:!1,enumerable:!1,writable:!1,value:y});export{b as default,y as ndarray};
//# sourceMappingURL=mod.js.map
